<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jane - A super concise theme for Hugo</title>
    <link>http://localhost:1313/adriel/post/</link>
    <description>Recent content in Posts on Jane - A super concise theme for Hugo</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>artiza.adriel@gmail.com (Adriel)</managingEditor>
    <webMaster>artiza.adriel@gmail.com (Adriel)</webMaster>
    <lastBuildDate>Sat, 13 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/adriel/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mastering Closures in Rust: The Idiomatic Way</title>
      <link>http://localhost:1313/adriel/post/closures-in-rust/</link>
      <pubDate>Sat, 13 Jan 2024 00:00:00 +0000</pubDate><author>artiza.adriel@gmail.com (Adriel)</author>
      <guid>http://localhost:1313/adriel/post/closures-in-rust/</guid>
      <description>&lt;p&gt;Closures are a powerful feature in Rust, providing a concise way to capture and use variables from their surrounding scope. In this post, we’ll explore closures and how to use them in an idiomatic Rust programming style.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-are-closures&#34;&gt;What Are Closures?&lt;/h2&gt;&#xA;&lt;p&gt;A &lt;strong&gt;closure&lt;/strong&gt; is an anonymous function that can capture variables from its enclosing scope. Closures in Rust are flexible and can adapt to different levels of functionality:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Fn:&lt;/strong&gt; Borrow variables from the environment immutably.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;FnMut:&lt;/strong&gt; Borrow variables mutably.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;FnOnce:&lt;/strong&gt; Take ownership of the variables they capture.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Here’s a simple example:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/adriel/post/smartcontract-solana/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>artiza.adriel@gmail.com (Adriel)</author>
      <guid>http://localhost:1313/adriel/post/smartcontract-solana/</guid>
      <description>&lt;h1 id=&#34;tutorial-create-a-smart-contract-using-anchor-in-solana&#34;&gt;Tutorial: Create a Smart Contract Using Anchor in Solana&lt;/h1&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;This tutorial will guide you through creating a simple Solana smart contract using &lt;strong&gt;Anchor&lt;/strong&gt;, a popular framework for developing Solana programs. Anchor simplifies the development process with helpful abstractions and tooling.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Basic Knowledge&lt;/strong&gt;: Familiarity with Rust programming and Solana concepts.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Installed Software&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Rust: &lt;a href=&#34;https://www.rust-lang.org/tools/install&#34;&gt;Install Rust&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Solana CLI: &lt;a href=&#34;https://docs.solana.com/cli/install-solana-cli-tools&#34;&gt;Install Solana CLI&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Anchor CLI: Install it via Cargo:&#xA;&lt;div class=&#34;highlight-container&#34;&gt;&#xA;&#xA;  &lt;button class=&#34;copy-code-btn outline&#34;&gt;Copy&lt;/button&gt;&#xA;&#xA;  &#xA;  &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cargo install --git https://github.com/coral-xyz/anchor avm --locked --force&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;avm install latest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;avm use latest&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Node.js and npm: &lt;a href=&#34;https://nodejs.org/&#34;&gt;Install Node.js&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;step-1-initialize-a-new-anchor-project&#34;&gt;Step 1: Initialize a New Anchor Project&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open a terminal and run:&#xA;&lt;div class=&#34;highlight-container&#34;&gt;&#xA;&#xA;  &lt;button class=&#34;copy-code-btn outline&#34;&gt;Copy&lt;/button&gt;&#xA;&#xA;  &#xA;  &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;anchor init my_smart_contract&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
  </channel>
</rss>
